<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【luogu】二〇二三 四月三日</title>
    <link href="/2023/04/05/2023.4.5/"/>
    <url>/2023/04/05/2023.4.5/</url>
    
    <content type="html"><![CDATA[<p><em><a href="https://www.luogu.com.cn/training/103#problems">https://www.luogu.com.cn/training/103#problems</a></em>  </p><p><em>打比赛被暴打了，深感基础没有打牢，于是现在开始刷洛谷基础题单。</em> </p><p>三道相同思路的题目，给处理过的区域打上标记，遍历计数未处理区域。</p><h2 id="校门外的树"><a href="#校门外的树" class="headerlink" title="校门外的树"></a>校门外的树</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某校大门外长度为 l 的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 0 的位置，另一端在 l 的位置；数轴上的每个整数点，即 0,1,2,…,l，都种有一棵树。</p><p>由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有两个整数，分别表示马路的长度 l 和区域的数目 m。</p><p>接下来 m 行，每行两个整数 u, v，表示一个区域的起始点和终止点的坐标。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一行一个整数，表示将这些树都移走后，马路上剩余的树木数量。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">500 3<br>150 300<br>100 200<br>470 471<br></code></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">298<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> arr[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[l + <span class="hljs-number">1</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt;= l; i++)<br>        &#123;<br>           arr[i] = <span class="hljs-number">0</span>; <br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; m; i++)<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">beg</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">end</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> beg; j &lt;= end; j++)<br>            &#123;<br>                arr[j] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; l + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i] == <span class="hljs-number">0</span>)<br>            &#123;<br>                n++;<br>            &#125;<br>        &#125;<br>        <br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【Mc生存】插火把"><a href="#【Mc生存】插火把" class="headerlink" title="【Mc生存】插火把"></a>【Mc生存】插火把</h2><h3 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h3><p>初一党应该都知道……</p><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>话说有一天 linyorson 在“我的世界”开了一个 n * n 的方阵，现在他有 m 个火把和 k 个萤石，分别放在 (x_1, y_1) - (x_m, y_m) 和 (o_1, p_1) - (o_k, p_k) 的位置，没有光并且没放东西的地方会生成怪物。请问在这个方阵中有几个点会生成怪物？</p><p>P.S. 火把的照亮范围是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">|暗|暗| 光 |暗|暗|<br>|暗|光| 光 |光|暗|<br>|光|光|火把|光|光|<br>|暗|光| 光 |光|暗|<br>|暗|暗| 光 |暗|暗|<br></code></pre></td></tr></table></figure><p>萤石：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">|光|光| 光 |光|光|<br>|光|光| 光 |光|光|<br>|光|光|萤石|光|光|<br>|光|光| 光 |光|光|<br>|光|光| 光 |光|光|<br></code></pre></td></tr></table></figure><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入共 m + k + 1 行。<br>第一行为 n, m, k。<br>第 2 到第 m + 1 行分别是火把的位置 x_i, y_i。<br>第 m + 2 到第 m + k + 1 行分别是萤石的位置 o_i, p_i。</p><p>注：可能没有萤石，但一定有火把。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>有几个点会生出怪物。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">5 1 0<br>3 3<br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">12<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 100 + 5</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,m,k;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);<br>    <span class="hljs-type">int</span> block[N][N];<br>    <span class="hljs-type">int</span> t = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; m; i++)<br>    &#123;<br>        <span class="hljs-type">int</span> x,y;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = x - <span class="hljs-number">1</span>; j &lt;= x + <span class="hljs-number">1</span>; j++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k2 = y - <span class="hljs-number">1</span>; k2 &lt;= k + <span class="hljs-number">1</span>; k2++)<br>            &#123;<br>                block[j][k2] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        block[x][<span class="hljs-built_in">abs</span>(y - <span class="hljs-number">2</span>)] = <span class="hljs-number">1</span>;<br>        block[x][y + <span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;<br>        block[<span class="hljs-built_in">abs</span>(x - <span class="hljs-number">2</span>)][y] = <span class="hljs-number">1</span>;<br>        block[x + <span class="hljs-number">2</span>][y] = <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; k; i++)<br>    &#123;<br>        <span class="hljs-type">int</span> x,y;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = x - <span class="hljs-number">2</span>; j &lt;= x + <span class="hljs-number">2</span>; j++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k2 = y - <span class="hljs-number">2</span>; k2 &lt;= k + <span class="hljs-number">2</span>; k2++)<br>            &#123;<br>                block[j][k2] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= n; j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(block[i][j] == <span class="hljs-number">0</span>) t++;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,t);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="工艺品制作"><a href="#工艺品制作" class="headerlink" title="工艺品制作"></a>工艺品制作</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>现有一个长宽高分别为 w,x,h 组成的实心玻璃立方体，可以认为是由 1 * 1 * 1 的数个小方块组成的，每个小方块都有一个坐标  ( i,j,k ) 。现在需要进行 q 次切割。每次切割给出 (x_1,y_1,z_1),(x_2,y_2,z_2) 这 6 个参数，保证 x_1 &lt;&#x3D; x_2，y_1 &lt;&#x3D; y_2，z_1 &lt;&#x3D; z_2；每次切割时，使用激光工具切出一个立方体空洞，空洞的壁平行于立方体的面，空洞的对角点就是给出的切割参数的两个点。</p><p>换句话说，所有满足  x_1 &lt;&#x3D; i &lt;&#x3D; x_2，y_1 &lt;&#x3D; j &lt;&#x3D; y_2 ，$z_1 &lt;&#x3D; k &lt;&#x3D; z_2 的小方块 (i,j,k) 的点都会被激光蒸发。例如有一个  4 * 4 * 4 的大方块，其体积为 64；给出参数 (1,1,1),(2,2,2) 时，中间的 8 块小方块就会被蒸发，剩下 56 个小方块。现在想知道经过所有切割操作后，剩下的工艺品还剩下多少格小方块的体积？</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行三个正整数 w,x,h。</p><p>第二行一个正整数。</p><p>接下来 $q$ 行，每行六个整数 (x_1,y_1,z_1),(x_2,y_2,z_2)。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数表示答案。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">4 4 4<br>1<br>1 1 1 2 2 2<br></code></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">56<br></code></pre></td></tr></table></figure><p>数据保证，1 &lt;&#x3D; w,x,h &lt;&#x3D; 20，1 &lt;&#x3D; q &lt;&#x3D; 100。1 &lt;&#x3D; x_1 &lt;&#x3D; x_2 &lt;&#x3D; w，1 &lt;&#x3D; y_1 &lt;&#x3D; y_2 &lt;&#x3D; x，1 &lt;&#x3D; z_1 &lt;&#x3D; z_2 &lt;&#x3D; h。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> block[][][] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[m][x][h];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">q</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; q; i++)<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">z1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x2</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y2</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">z2</span> <span class="hljs-operator">=</span> input.nextInt();<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> x1; j &lt;= x2; j++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> y1; k &lt;= y2; k++)<br>                &#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> z1; l &lt;= z2; l++)<br>                    &#123;<br>                        block[j][k][l] = <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; m; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; x; j++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; k &lt; h; k++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(block[i][j][k] == <span class="hljs-number">0</span>) n++;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】单词接龙</title>
    <link href="/2023/03/17/%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/"/>
    <url>/2023/03/17/%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/</url>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。-输入格式有多组输入样例，每组样例以-n-开头，后面有-n-个单词，每个单词用空格隔开。-输出格式接龙成功输出”Yes”-失败输出“No”。-输入样例-输出样例"><a href="#年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。-输入格式有多组输入样例，每组样例以-n-开头，后面有-n-个单词，每个单词用空格隔开。-输出格式接龙成功输出”Yes”-失败输出“No”。-输入样例-输出样例" class="headerlink" title="年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。### 输入格式有多组输入样例，每组样例以 n 开头，后面有 n 个单词，每个单词用空格隔开。### 输出格式接龙成功输出”Yes”,失败输出“No”。### 输入样例### 输出样例"></a>年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。<br>### 输入格式<br>有多组输入样例，每组样例以 n 开头，后面有 n 个单词，每个单词用空格隔开。<br>### 输出格式<br>接龙成功输出”Yes”,失败输出“No”。<br>### 输入样例<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">3 go ok kind<br>5 aband define expect text together<br></code></pre></td></tr></table></figure><br>### 输出样例<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">&quot;Yes&quot;<br>“No”<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span><br>&#123;<br><span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-keyword">while</span>(input.hasNext())<br>&#123;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">yn</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br><span class="hljs-type">int</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> input.nextLine();<br><span class="hljs-type">char</span> ch[] = str.toCharArray();<br><br>ch[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;a&#x27;</span>;<br>ch[ch.length - <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;a&#x27;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; ch.length; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(ch[i] == <span class="hljs-string">&#x27; &#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(ch[i + <span class="hljs-number">1</span>] == ch[i - <span class="hljs-number">1</span>])<br>&#123;<br>yn = <span class="hljs-literal">true</span>;<br>t++;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(yn == <span class="hljs-literal">true</span> &amp;&amp; t == n - <span class="hljs-number">1</span>)<br>&#123;<br>System.out.println(<span class="hljs-string">&quot;Yes&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>System.out.println(<span class="hljs-string">&quot;No&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】二〇二三 三月十五日</title>
    <link href="/2023/03/16/2023.3.15/"/>
    <url>/2023/03/16/2023.3.15/</url>
    
    <content type="html"><![CDATA[<h2 id="孤独数字"><a href="#孤独数字" class="headerlink" title="孤独数字"></a>孤独数字</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。-输入格式输入数字有多组，每组数字以n开头，后面有n个数字。-输出格式输出每组数字中的孤独数字。-样例输入-样例输出"><a href="#在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。-输入格式输入数字有多组，每组数字以n开头，后面有n个数字。-输出格式输出每组数字中的孤独数字。-样例输入-样例输出" class="headerlink" title="在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。### 输入格式输入数字有多组，每组数字以n开头，后面有n个数字。### 输出格式输出每组数字中的孤独数字。### 样例输入### 样例输出"></a>在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。<br>### 输入格式<br>输入数字有多组，每组数字以n开头，后面有n个数字。<br>### 输出格式<br>输出每组数字中的孤独数字。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">3 1 1 2<br>5 2 1 2 3 3<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">2<br>1<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span><br>&#123;<br><span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-keyword">while</span>(input.hasNext())<br>&#123;<br><span class="hljs-type">int</span> N;<br>N = input.nextInt();<br><span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br><span class="hljs-type">int</span> n[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">100</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; s.length; i++)<br>&#123;<br>s[i] = input.nextInt();<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; s.length; i++)<br>&#123;<br>n[s[i]]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n.length; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(n[i] == <span class="hljs-number">1</span>)<br>&#123;<br>System.out.print(i + <span class="hljs-string">&quot; &quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="查找最大元素"><a href="#查找最大元素" class="headerlink" title="查找最大元素"></a>查找最大元素</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”-max-”。-输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。-输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“-max-”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”-max-”。-样例输入-样例输出"><a href="#对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”-max-”。-输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。-输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“-max-”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”-max-”。-样例输入-样例输出" class="headerlink" title="对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”(max)”。### 输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。### 输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。### 样例输入### 样例输出"></a>对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”(max)”。<br>### 输入格式<br>输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。<br>### 输出格式<br>对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">abcdefgfedcba<br>xxxxx<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">abcdefg(max)fedcba<br>x(max)x(max)x(max)x(max)x(max)<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span>(input.hasNext())<br>        &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> input.next();<br>            <span class="hljs-type">char</span> <span class="hljs-variable">max</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;A&#x27;</span>;<br>            <span class="hljs-type">char</span>[] chars = str.toCharArray();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> s : chars) <br>            &#123;<br>                <span class="hljs-keyword">if</span>(s&gt;max)<br>                &#123;<br>                    max = s;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> s : chars) <br>            &#123;<br>                <span class="hljs-keyword">if</span>(s==max)<br>                &#123;<br>                    System.out.print(s+<span class="hljs-string">&quot;(max)&quot;</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    System.out.print(s);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="绝对值排序"><a href="#绝对值排序" class="headerlink" title="绝对值排序"></a>绝对值排序</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><h2 id="输入n-n-lt-x3D-100-个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。-输入格式输入数据有多组，每组占一行，每行的第一个数字为n-接着是n个整数，n-x3D-0表示输入数据的结束，不做处理。-输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。-样例输入-样例输出"><a href="#输入n-n-lt-x3D-100-个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。-输入格式输入数据有多组，每组占一行，每行的第一个数字为n-接着是n个整数，n-x3D-0表示输入数据的结束，不做处理。-输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。-样例输入-样例输出" class="headerlink" title="输入n(n&lt;&#x3D;100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。### 输入格式输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n&#x3D;0表示输入数据的结束，不做处理。### 输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。### 样例输入### 样例输出"></a>输入n(n&lt;&#x3D;100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。<br>### 输入格式<br>输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n&#x3D;0表示输入数据的结束，不做处理。<br>### 输出格式<br>对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">3 3 -4 2<br>4 0 1 2 -3<br>0<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">-4 3 2<br>-3 2 1 0<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> <br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span> <br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span>(input.hasNext())<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0</span>)  <span class="hljs-keyword">break</span>;<br>            <span class="hljs-type">int</span> a[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>         <br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; a.length; i++)<br>            &#123;<br>                a[i] = input.nextInt();      <br>            &#125;<br>         <br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i&lt;a.length - <span class="hljs-number">1</span>; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>; j &lt; n; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(Math.abs(a[i]) &lt; Math.abs(a[j]))<br>                    &#123;<br>                        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> a[j];<br>                        a[j] = a[i];<br>                        a[i] = x;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; a.length; j++)<br>            &#123;             <br>                System.out.print(a[j]+<span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            System.out.println( );<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】二〇二三 三月三日</title>
    <link href="/2023/03/14/2023.3.3/"/>
    <url>/2023/03/14/2023.3.3/</url>
    
    <content type="html"><![CDATA[<h2 id="水文，把昨晚做的java入门题贴出来http-172-20-25-11-正反排序-题目描述给你-n-个数，让你将他们排序，有两种排序方式，当-m-x3D-1-时，升序排序，当-m-x3D-0-时，降序排序。-输入格式多组测试数据。每组第一行输入两个整数-n-和-m，接下来输入-n-个数。-输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。-样例输入-样例输出"><a href="#水文，把昨晚做的java入门题贴出来http-172-20-25-11-正反排序-题目描述给你-n-个数，让你将他们排序，有两种排序方式，当-m-x3D-1-时，升序排序，当-m-x3D-0-时，降序排序。-输入格式多组测试数据。每组第一行输入两个整数-n-和-m，接下来输入-n-个数。-输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。-样例输入-样例输出" class="headerlink" title="水文，把昨晚做的java入门题贴出来http://172.20.25.11/## 正反排序### 题目描述给你 n 个数，让你将他们排序，有两种排序方式，当 m &#x3D; 1 时，升序排序，当 m &#x3D; 0 时，降序排序。### 输入格式多组测试数据。每组第一行输入两个整数 n 和 m，接下来输入 n 个数。### 输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。### 样例输入### 样例输出"></a>水文，把昨晚做的java入门题贴出来<br><em><a href="http://172.20.25.11/">http://172.20.25.11/</a></em><br>## 正反排序<br>### 题目描述<br>给你 n 个数，让你将他们排序，有两种排序方式，当 m &#x3D; 1 时，升序排序，当 m &#x3D; 0 时，降序排序。<br>### 输入格式<br>多组测试数据。每组第一行输入两个整数 n 和 m，接下来输入 n 个数。<br>### 输出格式<br>输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">5 1<br>5 2 4 3 1<br>5 0<br>5 2 4 3 1<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">5 4 3 2 1<br>1 2 3 4 5<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i ++)<br>        &#123;<br>            s[i] = input.nextInt();<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(m == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-type">int</span> Max,temp;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n-<span class="hljs-number">1</span>; i ++)<br>            &#123;<br>                Max = i;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>; j &lt; n; j ++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(s[j] &gt; s[Max])<br>                    &#123;<br>                        Max = j;<br>                    &#125;<br>                &#125;<br>                temp = s[Max];<br>                s[Max] = s[i];<br>                s[i] = temp;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-type">int</span> min,temp;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i ++)<br>            &#123;<br>                min = i;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>;j &lt; n;j ++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(s[j] &lt; s[min])<br>                    &#123;<br>                        min = j;<br>                    &#125;<br>                &#125;<br>                temp = s[min];<br>                s[min] = s[i];<br>                s[i] = temp;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i ++)<br>        &#123;<br>            System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,s[i]);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="计算高于平均值的数"><a href="#计算高于平均值的数" class="headerlink" title="计算高于平均值的数"></a>计算高于平均值的数</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="输入一组整数，输出高于平均值的数（按照输入顺序输出）-输入格式输入10个整数。-输出格式输出排列后的结果，两个数之间有一个空格。-样例输入-样例输出"><a href="#输入一组整数，输出高于平均值的数（按照输入顺序输出）-输入格式输入10个整数。-输出格式输出排列后的结果，两个数之间有一个空格。-样例输入-样例输出" class="headerlink" title="输入一组整数，输出高于平均值的数（按照输入顺序输出）### 输入格式输入10个整数。### 输出格式输出排列后的结果，两个数之间有一个空格。### 样例输入### 样例输出"></a>输入一组整数，输出高于平均值的数（按照输入顺序输出）<br>### 输入格式<br>输入10个整数。<br>### 输出格式<br>输出排列后的结果，两个数之间有一个空格。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">1 2 3 4 5 6 7 10 9 8<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">6 7 10 9 8<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.lang.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">10</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++)<br>        &#123;<br>            s[i] = reader.nextInt();<br>            sum = sum + s[i];<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(s[i] &gt; sum / <span class="hljs-number">10</span>)<br>            &#123;<br>                System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,s[i]);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="输出闰年"><a href="#输出闰年" class="headerlink" title="输出闰年"></a>输出闰年</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="给定一个年度范围，输出所有闰年。-输入格式输入两个整数，分别表示开始年份和结束年份。-输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。-样例输入-样例输出"><a href="#给定一个年度范围，输出所有闰年。-输入格式输入两个整数，分别表示开始年份和结束年份。-输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。-样例输入-样例输出" class="headerlink" title="给定一个年度范围，输出所有闰年。### 输入格式输入两个整数，分别表示开始年份和结束年份。### 输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。### 样例输入### 样例输出"></a>给定一个年度范围，输出所有闰年。<br>### 输入格式<br>输入两个整数，分别表示开始年份和结束年份。<br>### 输出格式<br>输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2001 2010<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2004 2008<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br> &#123;<br>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>     &#123;<br>         <span class="hljs-type">Scanner</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>         <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> reader.nextInt();<br>         <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> reader.nextInt();<br>         <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> a; i &lt;= b; i ++)<br>         &#123;<br>             <span class="hljs-keyword">if</span>(i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; i % <span class="hljs-number">100</span> != <span class="hljs-number">0</span> || <span class="hljs-number">1</span> % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>)<br>             &#123;<br>                 System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,i);<br>             &#125;<br>         &#125;<br>     &#125;<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数楼梯</title>
    <link href="/2023/02/16/%E6%A5%BC%E6%A2%AF/"/>
    <url>/2023/02/16/%E6%A5%BC%E6%A2%AF/</url>
    
    <content type="html"><![CDATA[<p>题源:<br><em><a href="https://www.acwing.com/problem/content/823/">https://www.acwing.com/problem/content/823/</a></em></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>楼梯有 N 阶，上楼可以一步上一阶，也可以一步上二阶。</p><p>编一个程序，计算共有多少种不同的走法。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一个数字，楼梯数。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出走的方式总数。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4<br></code></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><hr><p>好像是挺经典一道题，哪个网站的题库都有。<br>考虑到用某个方案走上来后，最后一步都会是上一阶或两阶楼梯，那么如果用f(x)表示上了x阶台阶的总方案数，我们就可以列出这样一个表达式：f(x) &#x3D; f(x - 1) + f(x - 2) 它表示总方案数等于最后一步上了一阶的方案数和最后一步上了两阶的方案数的和。同样的，如果f(x - 1)表示上了n - 1阶的总方案数，它也可以拆分为两个方案的和：f(x - 1) &#x3D; f(x - 1 - 1) + f(x - 1 - 2) ，f(x - 2)同理，并且可以继续一直拆分。如此我们发现这里是一个递归的关系，并且我们知道最开始两种的方案数f(1) &#x3D; 1,f(2) &#x3D; 2。写一个递归函数，打印出结果就好。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span><br>&#123;<br><span class="hljs-type">int</span> fx;<br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">2</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>fx = f(x - <span class="hljs-number">1</span>) + f(x - <span class="hljs-number">2</span>);<br><span class="hljs-keyword">return</span> fx;<br>&#125;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> N;<br><span class="hljs-type">int</span> res;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;N);<br>res = f(N);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, res);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>markdown语法</title>
    <link href="/2023/02/15/markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2023/02/15/markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>记录几种markdown基础语法。</p><hr><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">*斜体*</span><br><span class="hljs-emphasis">_斜体_</span><br><span class="hljs-strong">**粗体**</span><br><span class="hljs-emphasis">__粗体__</span><br><span class="hljs-strong">***斜粗体**</span>*<br><span class="hljs-emphasis">___斜粗体__</span>_<br></code></pre></td></tr></table></figure><p><em>斜体</em><br><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong><br><em><strong>斜粗体</strong></em><br><em><strong>斜粗体</strong></em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">~~删除线~~<br><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>下划线<span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><br></code></pre></td></tr></table></figure><p><del>删除线</del><br><u>下划线</u></p><hr><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">eee</span><span class="hljs-params">(空格)</span><span class="hljs-params">(空格)</span><span class="hljs-params">(回车)</span></span>曲项向天歌<br>eee\(回车)曲项向天歌<br>eee&lt;br /&gt;曲项向天歌<br></code></pre></td></tr></table></figure><p>eee<br />曲项向天歌</p><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">一段引用</span><br></code></pre></td></tr></table></figure><blockquote><p>一段引用</p></blockquote><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 第一项<br><span class="hljs-bullet">+</span> 第二项<br><span class="hljs-bullet">-</span> 第三项<br><br><span class="hljs-bullet">1.</span> 第一项<br><span class="hljs-bullet">2.</span> 第二项<br><span class="hljs-bullet">3.</span> 第三项<br></code></pre></td></tr></table></figure><ul><li>第一项</li></ul><ul><li>第二项</li></ul><ul><li>第三项</li></ul><ol><li>第一项</li><li>第二项</li><li>第三项<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 第一项<br><span class="hljs-bullet">    *</span> 第二级第一项<br><span class="hljs-bullet">    *</span> 第二级第二项<br></code></pre></td></tr></table></figure></li></ol><ul><li>第一项<ul><li>第二级第一项</li><li>第二级第二项</li></ul></li></ul><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 姓名 </span>|<span class="hljs-string"> 年龄 </span>|<span class="hljs-string"> 工作 </span>|<br>|<span class="hljs-string"> :-</span>|<span class="hljs-string"> :-: </span>|<span class="hljs-string"> -: </span>|<br>|<span class="hljs-string"> 小明 </span>|<span class="hljs-string"> 18 </span>|<span class="hljs-string"> 吃饭 </span>|<br>|<span class="hljs-string"> 小王 </span>|<span class="hljs-string"> 20 </span>|<span class="hljs-string"> 睡大觉 </span>|<br>|<span class="hljs-string"> 小红 </span>|<span class="hljs-string"> 23 </span>|<span class="hljs-string"> 打豆豆豆 </span>|<br><br>:- 表头和单元格内容左对齐<br>:-: 右对齐<br>-: 中间对齐<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小明</td><td align="center">18</td><td align="right">吃饭</td></tr><tr><td align="left">王小明</td><td align="center">20</td><td align="right">睡大觉</td></tr><tr><td align="left">欧阳小红</td><td align="center">23</td><td align="right">打豆豆豆</td></tr></tbody></table><hr><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">***</span><br><span class="hljs-bullet"></span><span class="hljs-emphasis">___</span><br></code></pre></td></tr></table></figure><hr><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>寻找最长连续不重复子序列</title>
    <link href="/2023/02/13/%E5%AF%BB%E6%89%BE%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <url>/2023/02/13/%E5%AF%BB%E6%89%BE%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E5%BA%8F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<p>题源:<br><em><a href="https://www.acwing.com/problem/">https://www.acwing.com/problem/</a> 题号799</em><br><em><a href="https://www.acwing.com/problem/comtent/801/">https://www.acwing.com/problem/comtent/801/</a></em></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为n的正数序列，请找出最长的不包含重复数的连续区间，输出它的长度。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含整数n。<br>第二行包含n个整数，表示整数序列。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，表示最长的不包含重复数的连续区间的长度。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span> <br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <br></code></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-type">int</span> s[<span class="hljs-number">100</span>];<br><span class="hljs-type">int</span> n;<br><br><span class="hljs-type">bool</span> <span class="hljs-title function_">check</span><span class="hljs-params">(<span class="hljs-type">int</span> left, <span class="hljs-type">int</span> right)</span>;<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = left; i &lt;= right; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i; j &lt;= right; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (s[i] != s[j])<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> ml = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> temp;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, n);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;s[i]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt;= n; j++)<br>&#123;<br><span class="hljs-keyword">if</span> (check(i, j))<br>&#123;<br>temp = j - i + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (temp &gt;= ml)<br>&#123;<br>ml = temp;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, ml);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>链表</title>
    <link href="/2023/02/09/%E9%93%BE%E8%A1%A8/"/>
    <url>/2023/02/09/%E9%93%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> &amp;lt;stdio.h&amp;gt;</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> &amp;lt;stdlib.h&amp;gt;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Gundam</span></span><br><span class="hljs-class">&#123;</span><br> <span class="hljs-type">int</span> hp;<br> <span class="hljs-type">int</span> atk;<br> <span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Human</span></span><br><span class="hljs-class">&#123;</span><br> <span class="hljs-type">int</span> age;<br> <span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br> Gundam robot;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Node</span> &#123;</span><br> <span class="hljs-type">int</span> num;<br> Node* pointer;<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br> <span class="hljs-comment">/*</span><br><span class="hljs-comment"> Human yzy;</span><br><span class="hljs-comment"> yzy.age = 18;</span><br><span class="hljs-comment"> yzy.robot.hp = 0;</span><br><span class="hljs-comment"> yzy.robot.atk = 0;</span><br><span class="hljs-comment"> scanf(&quot;%s&quot;, yzy.robot.name);</span><br><span class="hljs-comment"> scanf(&quot;%s&quot;, yzy.name);</span><br><span class="hljs-comment"> printf(&quot;%s&quot;, yzy.name);</span><br><span class="hljs-comment"> */</span><br> <span class="hljs-type">int</span> s0[<span class="hljs-number">10</span>];<br> <br> Node* head = (Node*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(Node));<br> Node* real_head = head;<br> <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">10</span>; i++) &#123;<br>  Node* current = (Node*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(Node));<br>  current-&amp;gt;pointer = <span class="hljs-literal">NULL</span>;<br>  current-&amp;gt;num = <span class="hljs-number">0</span>;<br><br>  head-&amp;gt;num = i;<br>  head-&amp;gt;pointer = current;<br>  head = current;<br> &#125;<br><br> <span class="hljs-keyword">while</span> (real_head-&amp;gt;pointer != <span class="hljs-literal">NULL</span>) &#123;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, real_head-&amp;gt;num);<br>  real_head = real_head-&amp;gt;pointer;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HTTP</title>
    <link href="/2023/02/04/hello-world/"/>
    <url>/2023/02/04/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="HTTP-main"><a href="#HTTP-main" class="headerlink" title="HTTP main"></a>HTTP main</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-type">int</span> server_sock = <span class="hljs-number">-1</span>;<br>    u_short port = <span class="hljs-number">4000</span>;<br>    <span class="hljs-type">int</span> client_sock = <span class="hljs-number">-1</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">client_name</span>;</span><br>    <span class="hljs-type">socklen_t</span>  client_name_len = <span class="hljs-keyword">sizeof</span>(client_name);<br>    <span class="hljs-type">pthread_t</span> newthread;<br><br>    server_sock = startup(&amp;port);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;httpd running on port %d\n&quot;</span>, port);<br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>    &#123;<br>        client_sock = accept(server_sock,<br>                (<span class="hljs-keyword">struct</span> sockaddr *)&amp;client_name,<br>                &amp;client_name_len);<br>        <span class="hljs-keyword">if</span> (client_sock == <span class="hljs-number">-1</span>)<br>            error_die(<span class="hljs-string">&quot;accept&quot;</span>);<br>        <span class="hljs-comment">/* accept_request(&amp;client_sock); */</span><br>        <span class="hljs-keyword">if</span> (pthread_create(&amp;newthread , <span class="hljs-literal">NULL</span>, (<span class="hljs-type">void</span> *)accept_request, (<span class="hljs-type">void</span> *)(<span class="hljs-type">intptr_t</span>)client_sock) != <span class="hljs-number">0</span>)<br>            perror(<span class="hljs-string">&quot;pthread_create&quot;</span>);<br>    &#125;<br><br>    close(server_sock);<br><br>    <span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
