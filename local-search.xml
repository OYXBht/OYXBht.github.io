<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【HTML】一些标签</title>
    <link href="/2023/05/11/html%E6%A0%87%E7%AD%BE/"/>
    <url>/2023/05/11/html%E6%A0%87%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<p><em>在这里记录几种html标签，方便记忆与以后查找。</em><br><em>随着学习以后可能会有补充。</em></p><span id="more"></span><h1 id="html骨架"><a href="#html骨架" class="headerlink" title="#html骨架"></a>#html骨架</h1><p>一个html文档的标准格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>&lt;!DOCTYPE html&gt;</strong> 声明为 HTML5 文档</li><li><strong>&lt;html&gt;</strong> 是 HTML 页面的根元素</li><li><strong>&lt;head&gt;<head></strong> 包含了文档的元数据，如 <strong>&lt;meta charset&#x3D;”utf-8”&gt;</strong> 定义网页编码格式为 utf-8（大部分浏览器中直接输出中文会变乱码，所以要在头部将字符声明为UTF-8）</li><li><strong>&lt;title&gt;</strong> 描述了文档的标题</li><li><strong>&lt;body&gt;</strong> 包含了可见的页面内容</li></ul><h1 id="html标签"><a href="#html标签" class="headerlink" title="#html标签"></a>#html标签</h1><h2 id="段落与文字标签"><a href="#段落与文字标签" class="headerlink" title="段落与文字标签"></a>段落与文字标签</h2><p>标题 (Heading)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><p>段落 (Paragraph)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>一段<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>又一段<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>换行 (Bater rabbet)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">一段文字<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>换到下一行<br></code></pre></td></tr></table></figure><p>水平线 (Horizontal Rule)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>标题<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>文章内容<br></code></pre></td></tr></table></figure><h2 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h2><p>粗体 (strong)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>加粗字体<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br></code></pre></td></tr></table></figure><p>斜体 (emphasized)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>斜体<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br></code></pre></td></tr></table></figure><p>下划线 (ins)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span>加粗字体<span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><br></code></pre></td></tr></table></figure><p>删除线 (delete)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>加粗字体<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上标 (superscripted)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">sup</span>&gt;</span>上标内容<span class="hljs-tag">&lt;/<span class="hljs-name">sup</span>&gt;</span><br></code></pre></td></tr></table></figure><p>下标 (subscripted)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>下标内容<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span><br></code></pre></td></tr></table></figure><p>居中 (center)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span>居中文字<span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="多媒体标签——图片、音频、视频标签"><a href="#多媒体标签——图片、音频、视频标签" class="headerlink" title="多媒体标签——图片、音频、视频标签"></a>多媒体标签——图片、音频、视频标签</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>使用标签 <strong>&lt;img&gt;</strong> 来插入图片， <strong>src</strong> 后填写图片路径， <strong>alt</strong> 后填写图片未加载时要显示的替换文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图片路径&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片未加载时显示的替换文本&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>img中的属性：</p><ul><li><strong>title</strong> ：鼠标悬停在图片上时显示文本</li><li><strong>width</strong> ：设定图片的像素宽度</li><li><strong>height</strong> ：设定图片的像素高度<br><em>（宽度高度只设置其一另一项会等比例缩放）</em></li></ul><h3 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;音频路径&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><p>属性：</p><ul><li><strong>control</strong> ：现实播放的控件</li><li><strong>autoplay</strong> ：自动播放（仅部分浏览器支持）</li><li><strong>loop</strong> ：循环播放</li></ul><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;视频路径&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p>属性</p><ul><li><strong>control</strong> ：现实播放的控件</li><li><strong>autoplay</strong> ：自动播放（仅部分浏览器支持）</li><li><strong>loop</strong> ：循环播放</li><li><strong>muted</strong> ： 视频默认静音</li><li><strong>weight</strong> ：播放器的像素宽度</li><li><strong>height</strong> ：播放器的像素高度  </li><li><strong>poster</strong> ：设定播放器封面，后面填写封面图片的URL</li></ul><h2 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;跳转地址&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank/_self&quot;</span>&gt;</span>链接处显示的文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>_black</strong> ：创建一个新窗口跳转</li><li><strong>_self</strong> ：在当前窗口跳转</li></ul><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p><strong>&lt;ul&gt;</strong> 标签表示列表的整体，包裹整个列表<br><strong>&lt;li&gt;</strong> 代表列表的每一项，可无限添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p> <strong>&lt;ol&gt;</strong> 为表示整体的标签<br>会在每一项前添加编号</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><p><strong>&lt;dl&gt;</strong> 标签表示列表的整体，包裹整个列表<br><strong>&lt;dt&gt;</strong> 表示列表标题<br><strong>&lt;dl&gt;</strong> 表示列表每一项。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>学生名单<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><h3 id="标准表格"><a href="#标准表格" class="headerlink" title="标准表格"></a>标准表格</h3><p><strong>&lt;table&gt;</strong> 表格整体，包裹表格整体<br><strong>&lt;tr&gt;</strong> 表格每行<br><strong>&lt;td&gt;</strong> &lt;tr&gt;包裹的该行的单元格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>70<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>80<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>属性：</p><ul><li><strong>border</strong> ：表格边框的宽度，<em>不填写默认无边框</em></li><li><strong>width</strong> ：表格宽度</li><li><strong>height</strong> ：表格高度</li></ul><p>合并单元格：</p><ul><li><strong>rowspan</strong> ：跨行（垂直）合并，只保留最上的，合并其他，属性值代表合并格数</li><li><strong>clospan</strong> ：跨列（水平）合并，方式同理<br><u>合并单元格只能在同一 <em>结构（见下）</em> 中进行，不同结构间不能合并</u><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>70<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>80<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="表格标题标签和表头标签"><a href="#表格标题标签和表头标签" class="headerlink" title="表格标题标签和表头标签"></a>表格标题标签和表头标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>成绩单<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>成绩<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>评分<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>70<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>80<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>&lt;caption&gt;</strong> 表格的大标题，写在&lt;table&gt;包裹内，表格所有内容上方，默认在表格顶部居中显示 </li><li><strong>&lt;th&gt;</strong> 表头单元格</li></ul><h3 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h3><p>结构标签可以标记表格的各个部分，使用时由标签包裹对应的内容。<br>表格的结构通常由三个部分组成：</p><ul><li><strong>&lt;tbody&gt;</strong> ：表格头部</li><li><strong>&lt;thead&gt;</strong> ：表格主体</li><li><strong>&lt;tfoot&gt;</strong> ：表格结尾<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>成绩单<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>成绩<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>评分<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>70<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小美<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>80<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>平均分<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>83<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="input-标签"><a href="#input-标签" class="headerlink" title="input 标签"></a><strong>input</strong> 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;...&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>&lt;input&gt;</strong> 标签通过 <strong>type</strong> 属性的取值不同具有以下功能：</p><ul><li><strong>text</strong> ：文本框，用于输入单行文本</li><li><strong>password</strong> ：密码框，填入的文本显示星号<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">文本框：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入文本&quot;</span>&gt;</span><br>密码框： <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>placeholder</strong> ：文本占位符，提示用户输入内容</li></ul></li><li><strong>radio</strong> ：单选框，用于多选一</li><li><strong>checkbox</strong> ：多选框，用于多选多<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">性别：男<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span> <br>    女<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span><br>城市：北京<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span> <br>    上海<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span> <br>    广州<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span><br><br>爱好：唱<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span> <span class="hljs-attr">checked</span>&gt;</span> <br>    跳<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span> <br>    rap <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span><br>    篮球<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>name</strong> ：选项所属的组名，单选框组成的小组在成员中选择其一</li><li><strong>checker</strong> ：默认选项</li></ul></li><li><strong>file</strong> ：打开文件目录选择文件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">multiple</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>multipie</strong> ：选择多个文件提交，不写时默认选择单个</li></ul></li><li><strong>submit</strong> ：提交按钮</li><li><strong>reset</strong> ：重置按钮，重置填写的内容</li><li><strong>button</strong> ：普通按钮，默认无功能，用于配合js添加功能<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">文本框：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入文本&quot;</span>&gt;</span><br>密码框： <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><em>要实现以上按钮功能需配合 <strong>&lt;from&gt;</strong> 标签使用</em></li></ul><h3 id="select-下拉菜单标签"><a href="#select-下拉菜单标签" class="headerlink" title="select 下拉菜单标签"></a><strong>select</strong> 下拉菜单标签</h3><p><strong>&lt;select&gt;</strong> 包裹整体，<strong>&lt;option&gt;</strong> 代表每一选项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">选择城市：<br><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> &gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">selected</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>广州<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>selected</strong> ：默认选项</li></ul><h3 id="textarea-文本域标签"><a href="#textarea-文本域标签" class="headerlink" title="textarea 文本域标签"></a><strong>textarea</strong> 文本域标签</h3><p>提供一个可输入多行文本的表单控件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;30&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>cols</strong> ：文本域内可见宽度</li><li><strong>rows</strong> ：文本域内可见行数</li></ul><h3 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a><strong>label</strong> 标签</h3><p>用于绑定网页内容与表单选项的关系，例如点击文本可直接选定对应绑定的选项<br>两种使用方法：</p><ul><li>为表单选项填写一个 <strong>id</strong> 属性，使用 <strong>&lt;lable&gt;</strong> 标签包裹绑定文本，并在<strong>for</strong>属性后填写相同的 <strong>id</strong> 属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">选择城市：<br>北京<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bj&quot;</span>&gt;</span><br>广东<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;gd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;bj&quot;</span>&gt;</span>我是北方人<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;gd&quot;</span>&gt;</span>我是南方人<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>直接使用<strong>&lt;lable&gt;</strong> 标签包裹要绑定的文本和表单选项<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">性别：<br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>男<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>女<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
      <tag>前端</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【luogu】二〇二三 四月十七日</title>
    <link href="/2023/04/16/2023.4.17/"/>
    <url>/2023/04/16/2023.4.17/</url>
    
    <content type="html"><![CDATA[<p><em><a href="https://www.luogu.com.cn/training/103#problems">https://www.luogu.com.cn/training/103#problems</a></em>  </p><h2 id="【P5732】杨辉三角"><a href="#【P5732】杨辉三角" class="headerlink" title="【P5732】杨辉三角"></a>【P5732】杨辉三角</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出 n (n &lt;&#x3D;20)，输出杨辉三角的前 n 行。</p><p>如果你不知道什么是杨辉三角，可以观察样例找找规律</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">6<br></code></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">1<br>1 1<br>1 2 1<br>1 3 3 1<br>1 4 6 4 1<br>1 5 10 10 5 1<br></code></pre></td></tr></table></figure><p>杨辉三角中的数等于它正上方的数和左上角数的和，可以写出一个通项公式：**num[i][j] &#x3D; num[i - 1][j] + num[i - 1][j - 1]**。声明一个二维数组照着公式递推。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span>[][] num = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n + <span class="hljs-number">1</span>][n + <span class="hljs-number">1</span>]; <span class="hljs-comment">//记得腾出一行防止数组溢出</span><br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            num[i][<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>            num[i][i] = <span class="hljs-number">1</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; j &lt; i; j++)<br>            &#123;<br>                num[i][j] = num[i - <span class="hljs-number">1</span>][j] + num[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>];<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt; i + <span class="hljs-number">1</span>; j++)<br>            &#123;<br>                System.out.print(num[i][j] + <span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            System.out.println(<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【P5731】蛇形方阵"><a href="#【P5731】蛇形方阵" class="headerlink" title="【P5731】蛇形方阵"></a>【P5731】蛇形方阵</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出一个不大于 9 的正整数 n，输出 n * n<br>的蛇形方阵。</p><p>从左上角填上 1 开始，顺时针方向依次填入数字，如同样例所示。注意每个数字有都会占用 3 个字符，前面使用空格补齐。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入一个正整数 n，含义如题所述。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出符合题目要求的蛇形矩阵。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">4<br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"> 1  2  3  4<br>12 13 14  5<br>11 16 15  6<br>10  9  8  7<br></code></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>数据保证，1 &lt;&#x3D; n &lt;&#x3D; 9。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span>[][] num = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n + <span class="hljs-number">1</span>][n + <span class="hljs-number">1</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>,y = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(k &lt;= n * n)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(y &lt; n &amp;&amp; num[x][y + <span class="hljs-number">1</span>] == <span class="hljs-number">0</span>) num[x][++y] = k++;<br>            <span class="hljs-keyword">while</span>(x &lt; n &amp;&amp; num[x + <span class="hljs-number">1</span>][y] == <span class="hljs-number">0</span>) num[++x][y] = k++;<br>            <span class="hljs-keyword">while</span>(y &gt; <span class="hljs-number">1</span> &amp;&amp; num[x][y - <span class="hljs-number">1</span>] == <span class="hljs-number">0</span>) num[x][--y] = k++;<br>            <span class="hljs-keyword">while</span>(x &gt; <span class="hljs-number">1</span> &amp;&amp; num[x - <span class="hljs-number">1</span>][y] == <span class="hljs-number">0</span>) num[--x][y] = k++;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt; n + <span class="hljs-number">1</span>; j++)<br>            &#123;<br>                System.out.printf(<span class="hljs-string">&quot;%3d &quot;</span>,num[i][j]);<br>            &#125;<br>            System.out.println(<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这题数据范围这么小，你其实可以：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)<br>            System.out.println(<span class="hljs-string">&quot;  1&quot;</span>);<br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;  4  3&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">3</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;  8  9  4&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;  7  6  5&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">4</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 12 13 14  5&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 11 15 16  6&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 10  9  8  7&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">5</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4  5&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 16 17 18 19  6&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 15 24 25 20  7&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 14 23 22 21  8&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 13 12 11 10  9&quot;</span> );<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">6</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4  5  6&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 20 21 22 23 24  7&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 19 32 33 34 25  8&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 18 31 36 35 26  9&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 17 30 29 28 27 10&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 16 15 14 13 12 11&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">7</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4  5  6  7&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 24 25 26 27 28 29  8&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 23 40 41 42 43 30  9&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 22 39 48 49 44 31 10&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 21 38 47 46 45 32 11&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 20 37 36 35 34 33 12&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 19 18 17 16 15 14 13&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">8</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4  5  6  7  8&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 28 29 30 31 32 33 34  9&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 27 48 49 50 51 52 35 10&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 26 47 60 61 62 53 36 11&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 25 46 59 64 63 54 37 12&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 24 45 58 57 56 55 38 13&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 23 44 43 42 41 40 39 14&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 22 21 20 19 18 17 16 15&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(n == <span class="hljs-number">9</span>)<br>        &#123;<br>            System.out.println(<span class="hljs-string">&quot;  1  2  3  4  5  6  7  8  9&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 32 33 34 35 36 37 38 39 10&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 31 56 57 58 59 60 61 40 11&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 30 55 72 73 74 75 62 41 12&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 29 54 71 80 81 76 63 42 13&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 28 53 70 79 78 77 64 43 14&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 27 52 69 68 67 66 65 44 15&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 26 51 50 49 48 47 46 45 16&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot; 25 24 23 22 21 20 19 18 17&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>luogu</tag>
      
      <tag>数组</tag>
      
      <tag>递推</tag>
      
      <tag>打表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【luogu】二〇二三 四月十日</title>
    <link href="/2023/04/10/2023.4.9/"/>
    <url>/2023/04/10/2023.4.9/</url>
    
    <content type="html"><![CDATA[<p><em><a href="https://www.luogu.com.cn/training/103#problems">https://www.luogu.com.cn/training/103#problems</a></em>  </p><h2 id="【P1614】爱与愁的心痛"><a href="#【P1614】爱与愁的心痛" class="headerlink" title="【P1614】爱与愁的心痛"></a>【P1614】爱与愁的心痛</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>最近有 n 个不爽的事，每句话都有一个正整数刺痛值（心理承受力极差）。爱与愁大神想知道连续 m 个刺痛值的和的最小值是多少，但是由于业务繁忙，爱与愁大神只好请你编个程序告诉他。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有两个用空格隔开的整数，分别代表 n 和 m。</p><p>第 2 到第 (n + 1) 行，每行一个整数，第 (i + 1) 行的整数 a_i 代表第 i 件事的刺痛值 a_i。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一行一个整数，表示连续 m 个刺痛值的和的最小值是多少。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">8 3<br>1<br>4<br>7<br>3<br>1<br>2<br>4<br>3<br></code></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">6<br></code></pre></td></tr></table></figure><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><ul><li>对于 30% 的数据，保证 n &lt;&#x3D; 20。</li><li>对于 60% 的数据，保证 n &lt;&#x3D; 100。</li><li>对于 90% 的数据，保证 n &lt;&#x3D; 10^3。</li><li>对于 100% 的数据，保证 $0 &lt;&#x3D; m &lt;&#x3D; n &lt;&#x3D; 3 &lt;&#x3D; 10^3，1 &lt;&#x3D; a_i &lt;&#x3D; 100。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> arr[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">minsum</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000000</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; arr.length; i++)<br>        &#123;<br>            arr[i] = input.nextInt();<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt;= arr.length - m; i++)<br>        &#123;<br>            sum = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i; j &lt; i + m; j++)<br>            &#123;<br>                sum += arr[j];<br>            &#125;<br><br>            <span class="hljs-keyword">if</span>(sum &lt; minsum)<br>            &#123;<br>                minsum = sum;<br>            &#125;<br>        &#125;<br><br>        System.out.println(minsum);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【P2141】珠心算测验"><a href="#【P2141】珠心算测验" class="headerlink" title="【P2141】珠心算测验"></a>【P2141】珠心算测验</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>珠心算是一种通过在脑中模拟算盘变化来完成快速运算的一种计算技术。珠心算训练，既能够开发智力，又能够为日常生活带来很多便利，因而在很多学校得到普及。</p><p>某学校的珠心算老师采用一种快速考察珠心算加法能力的测验方法。他随机生成一个正整数集合，集合中的数各不相同，然后要求学生回答：其中有多少个数，恰好等于集合中另外两个（不同的）数之和？</p><p>最近老师出了一些测验题，请你帮忙求出答案。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>共两行，第一行包含一个整数 n，表示测试题中给出的正整数个数。</p><p>第二行有 n 个正整数，每两个正整数之间用一个空格隔开，表示测试题中给出的正整数。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，表示测验题答案。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">4<br>1 2 3 4<br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2<br></code></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>【样例说明】</p><p>由 1+2&#x3D;3,1+3&#x3D;4，故满足测试要求的答案为 2。  </p><p>注意，加数和被加数必须是集合中的两个不同的数。</p><p>【数据说明】</p><p>对于 100% 的数据，3 &lt;&#x3D; n &lt;&#x3D; 100，测验题给出的正整数大小不超过 10,000。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> num[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-type">int</span> c[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">10000</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            num[i] = input.nextInt();<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; num.length; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>; j &lt; num.length; j++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(num[j] &lt; num[i])<br>                &#123;<br>                    <span class="hljs-type">int</span> temp;<br>                    temp = num[j];<br>                    num[j] = num[i];<br>                    num[i] = temp;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; i &lt; num.length; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; i; j++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> j; k &lt; i; k++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(num[j] + num[k] == num[i] &amp;&amp; j != k &amp;&amp; c[num[i]] != <span class="hljs-number">1</span>)<br>                    &#123;<br>                        t++;<br>                        c[num[i]] = <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        System.out.println(t);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>luogu</tag>
      
      <tag>数组</tag>
      
      <tag>模拟</tag>
      
      <tag>枚举</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【luogu】二〇二三 四月六日</title>
    <link href="/2023/04/06/2023.4.6/"/>
    <url>/2023/04/06/2023.4.6/</url>
    
    <content type="html"><![CDATA[<p><em><a href="https://www.luogu.com.cn/training/103#problems">https://www.luogu.com.cn/training/103#problems</a></em>  </p><h2 id="【P2615】神奇的幻方"><a href="#【P2615】神奇的幻方" class="headerlink" title="【P2615】神奇的幻方"></a>【P2615】神奇的幻方</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>幻方是一种很神奇的 N * N 矩阵：它由数字 1,2,3,…,N * N 构成，且每行、每列及两条对角线上的数字之和都相同。</p><p>当 N 为奇数时，我们可以通过下方法构建一个幻方：</p><p>首先将 1 写在第一行的中间。</p><p>之后，按如下方式从小到大依次填写每个数 K (K&#x3D;2,3,…,N * N) ：</p><ol><li>若 (K-1) 在第一行但不在最后一列，则将 K 填在最后一行， (K-1) 所在列的右一列；</li><li>若 (K-1) 在最后一列但不在第一行，则将 K 填在第一列， (K-1) 所在行的上一行；</li><li>若 (K-1) 在第一行最后一列，则将 K 填在 (K-1) 的正下方；</li><li>若 (K-1) 既不在第一行，也不在最后一列，如果 (K-1) 的右上方还未填数，则将 $K$ 填在 $(K-1)$ 的右上方，否则将 K 填在 (K-1) 的正下方。</li></ol><p>现给定 N ，请按上述方法构造 N * N 的幻方。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一个正整数 N，即幻方的大小。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>共 N 行，每行 N 个整数，即按上述方法构造出的 N * N 的幻方，相邻两个整数之间用单空格隔开。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">3<br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">8 1 6<br>3 5 7<br>4 9 2<br></code></pre></td></tr></table></figure><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 #2"></a>样例输入 #2</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">25<br></code></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 #2"></a>样例输出 #2</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs text">327 354 381 408 435 462 489 516 543 570 597 624 1 28 55 82 109 136 163 190 217 244 271 298 325<br>353 380 407 434 461 488 515 542 569 596 623 25 27 54 81 108 135 162 189 216 243 270 297 324 326<br>379 406 433 460 487 514 541 568 595 622 24 26 53 80 107 134 161 188 215 242 269 296 323 350 352<br>405 432 459 486 513 540 567 594 621 23 50 52 79 106 133 160 187 214 241 268 295 322 349 351 378<br>431 458 485 512 539 566 593 620 22 49 51 78 105 132 159 186 213 240 267 294 321 348 375 377 404<br>457 484 511 538 565 592 619 21 48 75 77 104 131 158 185 212 239 266 293 320 347 374 376 403 430<br>483 510 537 564 591 618 20 47 74 76 103 130 157 184 211 238 265 292 319 346 373 400 402 429 456<br>509 536 563 590 617 19 46 73 100 102 129 156 183 210 237 264 291 318 345 372 399 401 428 455 482<br>535 562 589 616 18 45 72 99 101 128 155 182 209 236 263 290 317 344 371 398 425 427 454 481 508<br>561 588 615 17 44 71 98 125 127 154 181 208 235 262 289 316 343 370 397 424 426 453 480 507 534<br>587 614 16 43 70 97 124 126 153 180 207 234 261 288 315 342 369 396 423 450 452 479 506 533 560<br>613 15 42 69 96 123 150 152 179 206 233 260 287 314 341 368 395 422 449 451 478 505 532 559 586<br>14 41 68 95 122 149 151 178 205 232 259 286 313 340 367 394 421 448 475 477 504 531 558 585 612<br>40 67 94 121 148 175 177 204 231 258 285 312 339 366 393 420 447 474 476 503 530 557 584 611 13<br>66 93 120 147 174 176 203 230 257 284 311 338 365 392 419 446 473 500 502 529 556 583 610 12 39<br>92 119 146 173 200 202 229 256 283 310 337 364 391 418 445 472 499 501 528 555 582 609 11 38 65<br>118 145 172 199 201 228 255 282 309 336 363 390 417 444 471 498 525 527 554 581 608 10 37 64 91<br>144 171 198 225 227 254 281 308 335 362 389 416 443 470 497 524 526 553 580 607 9 36 63 90 117<br>170 197 224 226 253 280 307 334 361 388 415 442 469 496 523 550 552 579 606 8 35 62 89 116 143<br>196 223 250 252 279 306 333 360 387 414 441 468 495 522 549 551 578 605 7 34 61 88 115 142 169<br>222 249 251 278 305 332 359 386 413 440 467 494 521 548 575 577 604 6 33 60 87 114 141 168 195<br>248 275 277 304 331 358 385 412 439 466 493 520 547 574 576 603 5 32 59 86 113 140 167 194 221<br>274 276 303 330 357 384 411 438 465 492 519 546 573 600 602 4 31 58 85 112 139 166 193 220 247<br>300 302 329 356 383 410 437 464 491 518 545 572 599 601 3 30 57 84 111 138 165 192 219 246 273<br>301 328 355 382 409 436 463 490 517 544 571 598 625 2 29 56 83 110 137 164 191 218 245 272 299<br></code></pre></td></tr></table></figure><p>对于100%的数据，对于全部数据， 1 &lt;&#x3D; N &lt;&#x3D; 39 且 N 为奇数。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span>  java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] arg)</span><br>   &#123;<br>       <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>       <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>       <span class="hljs-type">int</span> arr[][] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n][n];<br>       <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> n / <span class="hljs-number">2</span> ;<br>       arr[x][y] = <span class="hljs-number">1</span>;<br><br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; i &lt;= n * n; i++)<br>       &#123;<br>           <span class="hljs-keyword">if</span>(x == <span class="hljs-number">0</span> &amp;&amp; y != n - <span class="hljs-number">1</span>)<br>           &#123;<br>               x = n - <span class="hljs-number">1</span>;<br>               y += <span class="hljs-number">1</span>;<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x != <span class="hljs-number">0</span> &amp;&amp; y == n - <span class="hljs-number">1</span>)<br>           &#123;<br>               x -= <span class="hljs-number">1</span>;<br>               y = <span class="hljs-number">0</span>;<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">0</span> &amp;&amp; y == n - <span class="hljs-number">1</span>)<br>           &#123;<br>               x += <span class="hljs-number">1</span>;<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x != <span class="hljs-number">0</span> &amp;&amp; y != n - <span class="hljs-number">1</span> &amp;&amp; arr[x - <span class="hljs-number">1</span>][y + <span class="hljs-number">1</span>] == <span class="hljs-number">0</span>)<br>           &#123;<br>               x -= <span class="hljs-number">1</span>;<br>               y += <span class="hljs-number">1</span>;<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x != <span class="hljs-number">0</span> &amp;&amp; y != n - <span class="hljs-number">1</span> &amp;&amp; arr[x - <span class="hljs-number">1</span>][y + <span class="hljs-number">1</span>] != <span class="hljs-number">0</span>)<br>           &#123;<br>               x += <span class="hljs-number">1</span>;<br>           &#125;<br>           arr[x][y] = i;<br>       &#125;<br><br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i++)<br>       &#123;<br>           <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; n; j++)<br>           &#123;<br>               System.out.print(arr[i][j] + <span class="hljs-string">&quot; &quot;</span>);<br>           &#125;<br>           System.out.println(<span class="hljs-string">&quot; &quot;</span>);<br>       &#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【P1161】开灯"><a href="#【P1161】开灯" class="headerlink" title="【P1161】开灯"></a>【P1161】开灯</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>在一条无限长的路上，有一排无限长的路灯，编号为 1,2,3,4,…。</p><p>每一盏灯只有两种可能的状态，开或者关。如果按一下某一盏灯的开关，那么这盏灯的状态将发生改变。如果原来是开，将变成关。如果原来是关，将变成开。</p><p>在刚开始的时候，所有的灯都是关的。小明每次可以进行如下的操作：</p><p>指定两个数，a,t（a 为实数，t 为正整数）。将编号为 [a],[2 * a],[3 * a],…,[t * a] 的灯的开关各按一次。其中 [k] 表示实数 k 的整数部分。</p><p>在小明进行了 n 次操作后，小明突然发现，这个时候只有一盏灯是开的，小明很想知道这盏灯的编号，可是这盏灯离小明太远了，小明看不清编号是多少。</p><p>幸好，小明还记得之前的 n 次操作。于是小明找到了你，你能帮他计算出这盏开着的灯的编号吗？</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个正整数 n，表示 n 次操作。</p><p>接下来有 n 行，每行两个数，a_i,t_i。其中 a_i 是实数，小数点后一定有 6 位，t_i 是正整数。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>仅一个正整数，那盏开着的灯的编号。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span><br><span class="hljs-attribute">1</span>.<span class="hljs-number">618034</span> <span class="hljs-number">13</span><br><span class="hljs-attribute">2</span>.<span class="hljs-number">618034</span> <span class="hljs-number">7</span><br><span class="hljs-attribute">1</span>.<span class="hljs-number">000000</span> <span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">20<br></code></pre></td></tr></table></figure><p>记 T &#x3D; t_1 + t_2 + t_3 + … + t_n。</p><p>对于 30% 的数据，满足 T &lt;&#x3D; 1000；</p><p>对于 80% 的数据，满足 T &lt;&#x3D; 200000；</p><p>对于 100% 的数据，满足 T &lt;&#x3D; 2000000；</p><p>对于 100% 的数据，满足 n &lt;&#x3D; 5000,1 &lt;&#x3D; a_i &lt;&#x3D; 1000, 1 &lt;&#x3D; t_i &lt;&#x3D; T。</p><p>数据保证，在经过 n 次操作后，有且只有一盏灯是开的，不必判错。而且对于所有的 i 来说，t_i * a_i 的最大值不超过 2000000。</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> arr[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">2000001</span>];<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-type">double</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> input.nextDouble();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt;= t; j++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(arr[(<span class="hljs-type">int</span>)(a * j)] == <span class="hljs-number">0</span>) arr[(<span class="hljs-type">int</span>)(a * j)] = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> arr[(<span class="hljs-type">int</span>)(a * j)] = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; arr.length; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i] == <span class="hljs-number">1</span>) System.out.println(i);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>luogu</tag>
      
      <tag>数组</tag>
      
      <tag>模拟</tag>
      
      <tag>枚举</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【luogu】二〇二三 四月三日</title>
    <link href="/2023/04/05/2023.4.5/"/>
    <url>/2023/04/05/2023.4.5/</url>
    
    <content type="html"><![CDATA[<p><em>打比赛被暴打了，深感基础没有打牢，于是现在开始刷洛谷基础题单。</em>  </p><p><em><a href="https://www.luogu.com.cn/training/103#problems">https://www.luogu.com.cn/training/103#problems</a></em>  </p><p>三道相同思路的题目，给处理过的区域打上标记，遍历计数未处理区域。</p><h2 id="【P1047】校门外的树"><a href="#【P1047】校门外的树" class="headerlink" title="【P1047】校门外的树"></a>【P1047】校门外的树</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某校大门外长度为 l 的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 0 的位置，另一端在 l 的位置；数轴上的每个整数点，即 0,1,2,…,l，都种有一棵树。</p><p>由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有两个整数，分别表示马路的长度 l 和区域的数目 m。</p><p>接下来 m 行，每行两个整数 u, v，表示一个区域的起始点和终止点的坐标。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一行一个整数，表示将这些树都移走后，马路上剩余的树木数量。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">500 3<br>150 300<br>100 200<br>470 471<br></code></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">298<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> arr[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[l + <span class="hljs-number">1</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt;= l; i++)<br>        &#123;<br>           arr[i] = <span class="hljs-number">0</span>; <br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; m; i++)<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">beg</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">end</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> beg; j &lt;= end; j++)<br>            &#123;<br>                arr[j] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; l + <span class="hljs-number">1</span>; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i] == <span class="hljs-number">0</span>)<br>            &#123;<br>                n++;<br>            &#125;<br>        &#125;<br>        <br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【P1789】Mc生存-插火把"><a href="#【P1789】Mc生存-插火把" class="headerlink" title="【P1789】Mc生存 插火把"></a>【P1789】Mc生存 插火把</h2><h3 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h3><p>初一党应该都知道……</p><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>话说有一天 linyorson 在“我的世界”开了一个 n * n 的方阵，现在他有 m 个火把和 k 个萤石，分别放在 (x_1, y_1) - (x_m, y_m) 和 (o_1, p_1) - (o_k, p_k) 的位置，没有光并且没放东西的地方会生成怪物。请问在这个方阵中有几个点会生成怪物？</p><p>P.S. 火把的照亮范围是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">|暗|暗| 光 |暗|暗|<br>|暗|光| 光 |光|暗|<br>|光|光|火把|光|光|<br>|暗|光| 光 |光|暗|<br>|暗|暗| 光 |暗|暗|<br></code></pre></td></tr></table></figure><p>萤石：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">|光|光| 光 |光|光|<br>|光|光| 光 |光|光|<br>|光|光|萤石|光|光|<br>|光|光| 光 |光|光|<br>|光|光| 光 |光|光|<br></code></pre></td></tr></table></figure><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入共 m + k + 1 行。<br>第一行为 n, m, k。<br>第 2 到第 m + 1 行分别是火把的位置 x_i, y_i。<br>第 m + 2 到第 m + k + 1 行分别是萤石的位置 o_i, p_i。</p><p>注：可能没有萤石，但一定有火把。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>有几个点会生出怪物。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">5 1 0<br>3 3<br></code></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">12<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 100 + 5</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,m,k;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);<br>    <span class="hljs-type">int</span> block[N][N];<br>    <span class="hljs-type">int</span> t = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; m; i++)<br>    &#123;<br>        <span class="hljs-type">int</span> x,y;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = x - <span class="hljs-number">1</span>; j &lt;= x + <span class="hljs-number">1</span>; j++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k2 = y - <span class="hljs-number">1</span>; k2 &lt;= k + <span class="hljs-number">1</span>; k2++)<br>            &#123;<br>                block[j][k2] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        block[x][<span class="hljs-built_in">abs</span>(y - <span class="hljs-number">2</span>)] = <span class="hljs-number">1</span>;<br>        block[x][y + <span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;<br>        block[<span class="hljs-built_in">abs</span>(x - <span class="hljs-number">2</span>)][y] = <span class="hljs-number">1</span>;<br>        block[x + <span class="hljs-number">2</span>][y] = <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; k; i++)<br>    &#123;<br>        <span class="hljs-type">int</span> x,y;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = x - <span class="hljs-number">2</span>; j &lt;= x + <span class="hljs-number">2</span>; j++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k2 = y - <span class="hljs-number">2</span>; k2 &lt;= k + <span class="hljs-number">2</span>; k2++)<br>            &#123;<br>                block[j][k2] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt;= n; j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(block[i][j] == <span class="hljs-number">0</span>) t++;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,t);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="【P5729】工艺品制作"><a href="#【P5729】工艺品制作" class="headerlink" title="【P5729】工艺品制作"></a>【P5729】工艺品制作</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>现有一个长宽高分别为 w,x,h 组成的实心玻璃立方体，可以认为是由 1 * 1 * 1 的数个小方块组成的，每个小方块都有一个坐标  ( i,j,k ) 。现在需要进行 q 次切割。每次切割给出 (x_1,y_1,z_1),(x_2,y_2,z_2) 这 6 个参数，保证 x_1 &lt;&#x3D; x_2，y_1 &lt;&#x3D; y_2，z_1 &lt;&#x3D; z_2；每次切割时，使用激光工具切出一个立方体空洞，空洞的壁平行于立方体的面，空洞的对角点就是给出的切割参数的两个点。</p><p>换句话说，所有满足  x_1 &lt;&#x3D; i &lt;&#x3D; x_2，y_1 &lt;&#x3D; j &lt;&#x3D; y_2 ，$z_1 &lt;&#x3D; k &lt;&#x3D; z_2 的小方块 (i,j,k) 的点都会被激光蒸发。例如有一个  4 * 4 * 4 的大方块，其体积为 64；给出参数 (1,1,1),(2,2,2) 时，中间的 8 块小方块就会被蒸发，剩下 56 个小方块。现在想知道经过所有切割操作后，剩下的工艺品还剩下多少格小方块的体积？</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行三个正整数 w,x,h。</p><p>第二行一个正整数。</p><p>接下来 q 行，每行六个整数 (x_1,y_1,z_1),(x_2,y_2,z_2)。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数表示答案。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">4 4 4<br>1<br>1 1 1 2 2 2<br></code></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">56<br></code></pre></td></tr></table></figure><p>数据保证，1 &lt;&#x3D; w,x,h &lt;&#x3D; 20，1 &lt;&#x3D; q &lt;&#x3D; 100。1 &lt;&#x3D; x_1 &lt;&#x3D; x_2 &lt;&#x3D; w，1 &lt;&#x3D; y_1 &lt;&#x3D; y_2 &lt;&#x3D; x，1 &lt;&#x3D; z_1 &lt;&#x3D; z_2 &lt;&#x3D; h。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> block[][][] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[m][x][h];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">q</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; q; i++)<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">z1</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x2</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y2</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">z2</span> <span class="hljs-operator">=</span> input.nextInt();<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> x1; j &lt;= x2; j++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> y1; k &lt;= y2; k++)<br>                &#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> z1; l &lt;= z2; l++)<br>                    &#123;<br>                        block[j][k][l] = <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; m; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; x; j++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; k &lt; h; k++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(block[i][j][k] == <span class="hljs-number">0</span>) n++;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>luogu</tag>
      
      <tag>数组</tag>
      
      <tag>模拟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】单词接龙</title>
    <link href="/2023/03/17/%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/"/>
    <url>/2023/03/17/%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/</url>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。-输入格式有多组输入样例，每组样例以-n-开头，后面有-n-个单词，每个单词用空格隔开。-输出格式接龙成功输出”Yes”-失败输出“No”。-输入样例-输出样例"><a href="#年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。-输入格式有多组输入样例，每组样例以-n-开头，后面有-n-个单词，每个单词用空格隔开。-输出格式接龙成功输出”Yes”-失败输出“No”。-输入样例-输出样例" class="headerlink" title="年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。### 输入格式有多组输入样例，每组样例以 n 开头，后面有 n 个单词，每个单词用空格隔开。### 输出格式接龙成功输出”Yes”,失败输出“No”。### 输入样例### 输出样例"></a>年会上玩单词接龙比赛，挑战者说出单词，一个单词的首字母必须和上一个单词的尾字母相同，请判断挑战者有没有成功，如果成功，请返回”Yes”；否则，请返回”No”。<br>### 输入格式<br>有多组输入样例，每组样例以 n 开头，后面有 n 个单词，每个单词用空格隔开。<br>### 输出格式<br>接龙成功输出”Yes”,失败输出“No”。<br>### 输入样例<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">3 go ok kind<br>5 aband define expect text together<br></code></pre></td></tr></table></figure><br>### 输出样例<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">&quot;Yes&quot;<br>“No”<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span><br>&#123;<br><span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-keyword">while</span>(input.hasNext())<br>&#123;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">yn</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br><span class="hljs-type">int</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> input.nextLine();<br><span class="hljs-type">char</span> ch[] = str.toCharArray();<br><br>ch[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;a&#x27;</span>;<br>ch[ch.length - <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;a&#x27;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; ch.length; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(ch[i] == <span class="hljs-string">&#x27; &#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(ch[i + <span class="hljs-number">1</span>] == ch[i - <span class="hljs-number">1</span>])<br>&#123;<br>yn = <span class="hljs-literal">true</span>;<br>t++;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(yn == <span class="hljs-literal">true</span> &amp;&amp; t == n - <span class="hljs-number">1</span>)<br>&#123;<br>System.out.println(<span class="hljs-string">&quot;Yes&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>System.out.println(<span class="hljs-string">&quot;No&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>imauoj</tag>
      
      <tag>java</tag>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】二〇二三 三月十五日</title>
    <link href="/2023/03/16/2023.3.15/"/>
    <url>/2023/03/16/2023.3.15/</url>
    
    <content type="html"><![CDATA[<h2 id="孤独数字"><a href="#孤独数字" class="headerlink" title="孤独数字"></a>孤独数字</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。-输入格式输入数字有多组，每组数字以n开头，后面有n个数字。-输出格式输出每组数字中的孤独数字。-样例输入-样例输出"><a href="#在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。-输入格式输入数字有多组，每组数字以n开头，后面有n个数字。-输出格式输出每组数字中的孤独数字。-样例输入-样例输出" class="headerlink" title="在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。### 输入格式输入数字有多组，每组数字以n开头，后面有n个数字。### 输出格式输出每组数字中的孤独数字。### 样例输入### 样例输出"></a>在一组数中，仅有一个数字出现1次，其它数字都出现2次。只出现一次的数称为孤独的数字，你的任务是找出孤独的数字。<br>### 输入格式<br>输入数字有多组，每组数字以n开头，后面有n个数字。<br>### 输出格式<br>输出每组数字中的孤独数字。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">3 1 1 2<br>5 2 1 2 3 3<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">2<br>1<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span><br>&#123;<br><span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-keyword">while</span>(input.hasNext())<br>&#123;<br><span class="hljs-type">int</span> N;<br>N = input.nextInt();<br><span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br><span class="hljs-type">int</span> n[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">100</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; s.length; i++)<br>&#123;<br>s[i] = input.nextInt();<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; s.length; i++)<br>&#123;<br>n[s[i]]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n.length; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(n[i] == <span class="hljs-number">1</span>)<br>&#123;<br>System.out.print(i + <span class="hljs-string">&quot; &quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="查找最大元素"><a href="#查找最大元素" class="headerlink" title="查找最大元素"></a>查找最大元素</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”-max-”。-输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。-输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“-max-”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”-max-”。-样例输入-样例输出"><a href="#对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”-max-”。-输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。-输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“-max-”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”-max-”。-样例输入-样例输出" class="headerlink" title="对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”(max)”。### 输入格式输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。### 输出格式对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。### 样例输入### 样例输出"></a>对于输入的每个字符串，查找其中最大的字母，在该字母后插入字符串”(max)”。<br>### 输入格式<br>输入数据包括多个测试实例，每个实例由一行长度不超过100的字符串组成，字符串仅由大小写字母及数字构成。<br>### 输出格式<br>对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">abcdefgfedcba<br>xxxxx<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">abcdefg(max)fedcba<br>x(max)x(max)x(max)x(max)x(max)<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span>(input.hasNext())<br>        &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> input.next();<br>            <span class="hljs-type">char</span> <span class="hljs-variable">max</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;A&#x27;</span>;<br>            <span class="hljs-type">char</span>[] chars = str.toCharArray();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> s : chars) <br>            &#123;<br>                <span class="hljs-keyword">if</span>(s&gt;max)<br>                &#123;<br>                    max = s;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> s : chars) <br>            &#123;<br>                <span class="hljs-keyword">if</span>(s==max)<br>                &#123;<br>                    System.out.print(s+<span class="hljs-string">&quot;(max)&quot;</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    System.out.print(s);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="绝对值排序"><a href="#绝对值排序" class="headerlink" title="绝对值排序"></a>绝对值排序</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><h2 id="输入n-n-lt-x3D-100-个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。-输入格式输入数据有多组，每组占一行，每行的第一个数字为n-接着是n个整数，n-x3D-0表示输入数据的结束，不做处理。-输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。-样例输入-样例输出"><a href="#输入n-n-lt-x3D-100-个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。-输入格式输入数据有多组，每组占一行，每行的第一个数字为n-接着是n个整数，n-x3D-0表示输入数据的结束，不做处理。-输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。-样例输入-样例输出" class="headerlink" title="输入n(n&lt;&#x3D;100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。### 输入格式输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n&#x3D;0表示输入数据的结束，不做处理。### 输出格式对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。### 样例输入### 样例输出"></a>输入n(n&lt;&#x3D;100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。<br>### 输入格式<br>输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n&#x3D;0表示输入数据的结束，不做处理。<br>### 输出格式<br>对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">3 3 -4 2<br>4 0 1 2 -3<br>0<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">-4 3 2<br>-3 2 1 0<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> <br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span> <br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span>(input.hasNext())<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>            <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0</span>)  <span class="hljs-keyword">break</span>;<br>            <span class="hljs-type">int</span> a[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>         <br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; a.length; i++)<br>            &#123;<br>                a[i] = input.nextInt();      <br>            &#125;<br>         <br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i&lt;a.length - <span class="hljs-number">1</span>; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>; j &lt; n; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(Math.abs(a[i]) &lt; Math.abs(a[j]))<br>                    &#123;<br>                        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> a[j];<br>                        a[j] = a[i];<br>                        a[i] = x;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; a.length; j++)<br>            &#123;             <br>                System.out.print(a[j]+<span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            System.out.println( );<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>imauoj</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【IMAUOJ】二〇二三 三月三日</title>
    <link href="/2023/03/14/2023.3.3/"/>
    <url>/2023/03/14/2023.3.3/</url>
    
    <content type="html"><![CDATA[<h2 id="水文，把昨晚做的java入门题贴出来http-172-20-25-11-正反排序-题目描述给你-n-个数，让你将他们排序，有两种排序方式，当-m-x3D-1-时，升序排序，当-m-x3D-0-时，降序排序。-输入格式多组测试数据。每组第一行输入两个整数-n-和-m，接下来输入-n-个数。-输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。-样例输入-样例输出"><a href="#水文，把昨晚做的java入门题贴出来http-172-20-25-11-正反排序-题目描述给你-n-个数，让你将他们排序，有两种排序方式，当-m-x3D-1-时，升序排序，当-m-x3D-0-时，降序排序。-输入格式多组测试数据。每组第一行输入两个整数-n-和-m，接下来输入-n-个数。-输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。-样例输入-样例输出" class="headerlink" title="水文，把昨晚做的java入门题贴出来http://172.20.25.11/## 正反排序### 题目描述给你 n 个数，让你将他们排序，有两种排序方式，当 m &#x3D; 1 时，升序排序，当 m &#x3D; 0 时，降序排序。### 输入格式多组测试数据。每组第一行输入两个整数 n 和 m，接下来输入 n 个数。### 输出格式输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。### 样例输入### 样例输出"></a>水文，把昨晚做的java入门题贴出来<br><em><a href="http://172.20.25.11/">http://172.20.25.11/</a></em><br>## 正反排序<br>### 题目描述<br>给你 n 个数，让你将他们排序，有两种排序方式，当 m &#x3D; 1 时，升序排序，当 m &#x3D; 0 时，降序排序。<br>### 输入格式<br>多组测试数据。每组第一行输入两个整数 n 和 m，接下来输入 n 个数。<br>### 输出格式<br>输出排列后的结果，每两个数之间有一个空格，最后一个数后面没有空格，需要换行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">5 1<br>5 2 4 3 1<br>5 0<br>5 2 4 3 1<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">5 4 3 2 1<br>1 2 3 4 5<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i ++)<br>        &#123;<br>            s[i] = input.nextInt();<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(m == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-type">int</span> Max,temp;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n-<span class="hljs-number">1</span>; i ++)<br>            &#123;<br>                Max = i;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>; j &lt; n; j ++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(s[j] &gt; s[Max])<br>                    &#123;<br>                        Max = j;<br>                    &#125;<br>                &#125;<br>                temp = s[Max];<br>                s[Max] = s[i];<br>                s[i] = temp;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-type">int</span> min,temp;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i ++)<br>            &#123;<br>                min = i;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span>;j &lt; n;j ++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(s[j] &lt; s[min])<br>                    &#123;<br>                        min = j;<br>                    &#125;<br>                &#125;<br>                temp = s[min];<br>                s[min] = s[i];<br>                s[i] = temp;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i ++)<br>        &#123;<br>            System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,s[i]);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="计算高于平均值的数"><a href="#计算高于平均值的数" class="headerlink" title="计算高于平均值的数"></a>计算高于平均值的数</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="输入一组整数，输出高于平均值的数（按照输入顺序输出）-输入格式输入10个整数。-输出格式输出排列后的结果，两个数之间有一个空格。-样例输入-样例输出"><a href="#输入一组整数，输出高于平均值的数（按照输入顺序输出）-输入格式输入10个整数。-输出格式输出排列后的结果，两个数之间有一个空格。-样例输入-样例输出" class="headerlink" title="输入一组整数，输出高于平均值的数（按照输入顺序输出）### 输入格式输入10个整数。### 输出格式输出排列后的结果，两个数之间有一个空格。### 样例输入### 样例输出"></a>输入一组整数，输出高于平均值的数（按照输入顺序输出）<br>### 输入格式<br>输入10个整数。<br>### 输出格式<br>输出排列后的结果，两个数之间有一个空格。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">1 2 3 4 5 6 7 10 9 8<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">6 7 10 9 8<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.lang.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">int</span> s[] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">10</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++)<br>        &#123;<br>            s[i] = reader.nextInt();<br>            sum = sum + s[i];<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(s[i] &gt; sum / <span class="hljs-number">10</span>)<br>            &#123;<br>                System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,s[i]);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="输出闰年"><a href="#输出闰年" class="headerlink" title="输出闰年"></a>输出闰年</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><h2 id="给定一个年度范围，输出所有闰年。-输入格式输入两个整数，分别表示开始年份和结束年份。-输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。-样例输入-样例输出"><a href="#给定一个年度范围，输出所有闰年。-输入格式输入两个整数，分别表示开始年份和结束年份。-输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。-样例输入-样例输出" class="headerlink" title="给定一个年度范围，输出所有闰年。### 输入格式输入两个整数，分别表示开始年份和结束年份。### 输出格式输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。### 样例输入### 样例输出"></a>给定一个年度范围，输出所有闰年。<br>### 输入格式<br>输入两个整数，分别表示开始年份和结束年份。<br>### 输出格式<br>输出开始年份到结束年份的所有闰年，每个闰年用空格隔开，每个输出占一行。<br>### 样例输入<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2001 2010<br></code></pre></td></tr></table></figure><br>### 样例输出<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2004 2008<br></code></pre></td></tr></table></figure></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span><br> &#123;<br>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>     &#123;<br>         <span class="hljs-type">Scanner</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>         <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> reader.nextInt();<br>         <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> reader.nextInt();<br>         <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> a; i &lt;= b; i ++)<br>         &#123;<br>             <span class="hljs-keyword">if</span>(i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; i % <span class="hljs-number">100</span> != <span class="hljs-number">0</span> || <span class="hljs-number">1</span> % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>)<br>             &#123;<br>                 System.out.printf(<span class="hljs-string">&quot;%d &quot;</span>,i);<br>             &#125;<br>         &#125;<br>     &#125;<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>imauoj</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数楼梯</title>
    <link href="/2023/02/16/%E6%A5%BC%E6%A2%AF/"/>
    <url>/2023/02/16/%E6%A5%BC%E6%A2%AF/</url>
    
    <content type="html"><![CDATA[<p>题源:<br><em><a href="https://www.acwing.com/problem/content/823/">https://www.acwing.com/problem/content/823/</a></em></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>楼梯有 N 阶，上楼可以一步上一阶，也可以一步上二阶。</p><p>编一个程序，计算共有多少种不同的走法。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一个数字，楼梯数。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出走的方式总数。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4<br></code></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><hr><p>好像是挺经典一道题，哪个网站的题库都有。<br>考虑到用某个方案走上来后，最后一步都会是上一阶或两阶楼梯，那么如果用f(x)表示上了x阶台阶的总方案数，我们就可以列出这样一个表达式：f(x) &#x3D; f(x - 1) + f(x - 2) 它表示总方案数等于最后一步上了一阶的方案数和最后一步上了两阶的方案数的和。同样的，如果f(x - 1)表示上了n - 1阶的总方案数，它也可以拆分为两个方案的和：f(x - 1) &#x3D; f(x - 1 - 1) + f(x - 1 - 2) ，f(x - 2)同理，并且可以继续一直拆分。如此我们发现这里是一个递归的关系，并且我们知道最开始两种的方案数f(1) &#x3D; 1,f(2) &#x3D; 2。写一个递归函数，打印出结果就好。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span><br>&#123;<br><span class="hljs-type">int</span> fx;<br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">2</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>fx = f(x - <span class="hljs-number">1</span>) + f(x - <span class="hljs-number">2</span>);<br><span class="hljs-keyword">return</span> fx;<br>&#125;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> N;<br><span class="hljs-type">int</span> res;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;N);<br>res = f(N);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, res);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>AcWing</tag>
      
      <tag>递归</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【markdown】markdown语法</title>
    <link href="/2023/02/15/markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2023/02/15/markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>记录几种markdown基础语法</p><span id="more"></span><hr><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">*斜体*</span><br><span class="hljs-emphasis">_斜体_</span><br><span class="hljs-strong">**粗体**</span><br><span class="hljs-emphasis">__粗体__</span><br><span class="hljs-strong">***斜粗体**</span>*<br><span class="hljs-emphasis">___斜粗体__</span>_<br></code></pre></td></tr></table></figure><p><em>斜体</em><br><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong><br><em><strong>斜粗体</strong></em><br><em><strong>斜粗体</strong></em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">~~删除线~~<br><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>下划线<span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><br></code></pre></td></tr></table></figure><p><del>删除线</del><br><u>下划线</u></p><hr><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">eee</span><span class="hljs-params">(空格)</span><span class="hljs-params">(空格)</span><span class="hljs-params">(回车)</span></span>曲项向天歌<br>eee\(回车)曲项向天歌<br>eee&lt;br /&gt;曲项向天歌<br></code></pre></td></tr></table></figure><p>eee<br />曲项向天歌</p><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">一段引用</span><br></code></pre></td></tr></table></figure><blockquote><p>一段引用</p></blockquote><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 第一项<br><span class="hljs-bullet">+</span> 第二项<br><span class="hljs-bullet">-</span> 第三项<br><br><span class="hljs-bullet">1.</span> 第一项<br><span class="hljs-bullet">2.</span> 第二项<br><span class="hljs-bullet">3.</span> 第三项<br></code></pre></td></tr></table></figure><ul><li>第一项</li></ul><ul><li>第二项</li></ul><ul><li>第三项</li></ul><ol><li>第一项</li><li>第二项</li><li>第三项<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 第一项<br><span class="hljs-bullet">    *</span> 第二级第一项<br><span class="hljs-bullet">    *</span> 第二级第二项<br></code></pre></td></tr></table></figure></li></ol><ul><li>第一项<ul><li>第二级第一项</li><li>第二级第二项</li></ul></li></ul><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 姓名 </span>|<span class="hljs-string"> 年龄 </span>|<span class="hljs-string"> 工作 </span>|<br>|<span class="hljs-string"> :-</span>|<span class="hljs-string"> :-: </span>|<span class="hljs-string"> -: </span>|<br>|<span class="hljs-string"> 小明 </span>|<span class="hljs-string"> 18 </span>|<span class="hljs-string"> 吃饭 </span>|<br>|<span class="hljs-string"> 小王 </span>|<span class="hljs-string"> 20 </span>|<span class="hljs-string"> 睡大觉 </span>|<br>|<span class="hljs-string"> 小红 </span>|<span class="hljs-string"> 23 </span>|<span class="hljs-string"> 打豆豆豆 </span>|<br><br>:- 表头和单元格内容左对齐<br>:-: 中间对齐<br>-: 右对齐<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小明</td><td align="center">18</td><td align="right">吃饭</td></tr><tr><td align="left">王小明</td><td align="center">20</td><td align="right">睡大觉</td></tr><tr><td align="left">欧阳小红</td><td align="center">23</td><td align="right">打豆豆豆</td></tr></tbody></table><hr><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">***</span><br><span class="hljs-bullet"></span><span class="hljs-emphasis">___</span><br></code></pre></td></tr></table></figure><hr><hr>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>寻找最长连续不重复子序列</title>
    <link href="/2023/02/13/%E5%AF%BB%E6%89%BE%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <url>/2023/02/13/%E5%AF%BB%E6%89%BE%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E5%BA%8F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<p>题源:<br><em><a href="https://www.acwing.com/problem/">https://www.acwing.com/problem/</a> 题号799</em><br><em><a href="https://www.acwing.com/problem/comtent/801/">https://www.acwing.com/problem/comtent/801/</a></em></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为n的正数序列，请找出最长的不包含重复数的连续区间，输出它的长度。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含整数n。<br>第二行包含n个整数，表示整数序列。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，表示最长的不包含重复数的连续区间的长度。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span> <br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <br></code></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-type">int</span> s[<span class="hljs-number">100</span>];<br><span class="hljs-type">int</span> n;<br><br><span class="hljs-type">bool</span> <span class="hljs-title function_">check</span><span class="hljs-params">(<span class="hljs-type">int</span> left, <span class="hljs-type">int</span> right)</span>;<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = left; i &lt;= right; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i; j &lt;= right; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (s[i] != s[j])<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> ml = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> temp;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, n);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;s[i]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt;= n; j++)<br>&#123;<br><span class="hljs-keyword">if</span> (check(i, j))<br>&#123;<br>temp = j - i + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (temp &gt;= ml)<br>&#123;<br>ml = temp;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, ml);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>刷题笔记</tag>
      
      <tag>AcWing</tag>
      
      <tag>二分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>链表</title>
    <link href="/2023/02/09/%E9%93%BE%E8%A1%A8/"/>
    <url>/2023/02/09/%E9%93%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> &amp;lt;stdio.h&amp;gt;</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> &amp;lt;stdlib.h&amp;gt;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Gundam</span></span><br><span class="hljs-class">&#123;</span><br> <span class="hljs-type">int</span> hp;<br> <span class="hljs-type">int</span> atk;<br> <span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Human</span></span><br><span class="hljs-class">&#123;</span><br> <span class="hljs-type">int</span> age;<br> <span class="hljs-type">char</span> name[<span class="hljs-number">100</span>];<br> Gundam robot;<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Node</span> &#123;</span><br> <span class="hljs-type">int</span> num;<br> Node* pointer;<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br> <span class="hljs-comment">/*</span><br><span class="hljs-comment"> Human yzy;</span><br><span class="hljs-comment"> yzy.age = 18;</span><br><span class="hljs-comment"> yzy.robot.hp = 0;</span><br><span class="hljs-comment"> yzy.robot.atk = 0;</span><br><span class="hljs-comment"> scanf(&quot;%s&quot;, yzy.robot.name);</span><br><span class="hljs-comment"> scanf(&quot;%s&quot;, yzy.name);</span><br><span class="hljs-comment"> printf(&quot;%s&quot;, yzy.name);</span><br><span class="hljs-comment"> */</span><br> <span class="hljs-type">int</span> s0[<span class="hljs-number">10</span>];<br> <br> Node* head = (Node*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(Node));<br> Node* real_head = head;<br> <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">10</span>; i++) &#123;<br>  Node* current = (Node*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(Node));<br>  current-&amp;gt;pointer = <span class="hljs-literal">NULL</span>;<br>  current-&amp;gt;num = <span class="hljs-number">0</span>;<br><br>  head-&amp;gt;num = i;<br>  head-&amp;gt;pointer = current;<br>  head = current;<br> &#125;<br><br> <span class="hljs-keyword">while</span> (real_head-&amp;gt;pointer != <span class="hljs-literal">NULL</span>) &#123;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, real_head-&amp;gt;num);<br>  real_head = real_head-&amp;gt;pointer;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP main</title>
    <link href="/2023/02/04/HTTP%20main/"/>
    <url>/2023/02/04/HTTP%20main/</url>
    
    <content type="html"><![CDATA[<h1 id="HTTP-main"><a href="#HTTP-main" class="headerlink" title="HTTP main"></a>HTTP main</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-type">int</span> server_sock = <span class="hljs-number">-1</span>;<br>    u_short port = <span class="hljs-number">4000</span>;<br>    <span class="hljs-type">int</span> client_sock = <span class="hljs-number">-1</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">client_name</span>;</span><br>    <span class="hljs-type">socklen_t</span>  client_name_len = <span class="hljs-keyword">sizeof</span>(client_name);<br>    <span class="hljs-type">pthread_t</span> newthread;<br><br>    server_sock = startup(&amp;port);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;httpd running on port %d\n&quot;</span>, port);<br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>    &#123;<br>        client_sock = accept(server_sock,<br>                (<span class="hljs-keyword">struct</span> sockaddr *)&amp;client_name,<br>                &amp;client_name_len);<br>        <span class="hljs-keyword">if</span> (client_sock == <span class="hljs-number">-1</span>)<br>            error_die(<span class="hljs-string">&quot;accept&quot;</span>);<br>        <span class="hljs-comment">/* accept_request(&amp;client_sock); */</span><br>        <span class="hljs-keyword">if</span> (pthread_create(&amp;newthread , <span class="hljs-literal">NULL</span>, (<span class="hljs-type">void</span> *)accept_request, (<span class="hljs-type">void</span> *)(<span class="hljs-type">intptr_t</span>)client_sock) != <span class="hljs-number">0</span>)<br>            perror(<span class="hljs-string">&quot;pthread_create&quot;</span>);<br>    &#125;<br><br>    close(server_sock);<br><br>    <span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World!</title>
    <link href="/1978/02/22/hello%20world!/"/>
    <url>/1978/02/22/hello%20world!/</url>
    
    <content type="html"><![CDATA[<br><center>Hello World!</center><br>]]></content>
    
    
    
    <tags>
      
      <tag>Hello World!</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
